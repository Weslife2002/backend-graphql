type Query {
  userAuth(email: String!, password: String!): UserAuthReponse
  googleUserAuth: UserAuthReponse
  facebookUserAuth: UserAuthReponse
}

type Mutation {
  userSignUp(userSignUpInput: userSignUpInput!): UserSignUpReponse
}

type UserAccount {
  email: String!
  username: String!
  photo: String!
  bio: String!
  numberOfFollowers: String!
  numberOfFollowees: String!
  numberOfNewNotification: String!
  topFiveFollowees: [String!]!
  password: String!
  connectFacebook: Boolean!
  connectGoogle: Boolean!
  followingTopics: [String!]!
}

type UserShort {
  email: String!
  username: String!
  numberOfFollowers: Int!
  photoUrl: String!
  bio: String!
}

input userSignUpInput {
  email: String!
  username: String!
  password: String!
} 

type UserAccountShort {
  email: String!
  username: String!
  photoUrl: String!
  followingTopics: [String!]!
  numberOfNewNotifications: Int!
}

type UserSignUpReponse implements MutationResponse{
  code: Int!
  success: Boolean!
  message: String!
  user: UserAccountShort
}

type UserAuthReponse {
  code: Int!
  success: Boolean!
  message: String!
  user: UserAccountShort
}