type Query {
  getPostContent(postContentId: String!): PostContent!
  
}

type Mutation {
  "// TODO: Only User Can Do It (Auth Directive) "
  createPost(
    topicCluster: [String!]!
    tags: [String!]!
    estimatedReadingTime: Int!
    ThumbnailPictureUrl: String!
    shortDescription: String!
    content: String!
  ): createPostResponse
}

type PostThumbnail {
  postContentId: String!
  authorEmail: [String!]!
  topicCluster: [String!]!
  tags: [String!]!
  publishTime: Date!
  estimatedReadingTime: Int!
  ThumbnailPictureUrl: String!
  shortDescription: String!
}

type PostContent {
  authorEmail: [String!]!
  topicCluster: [String!]!
  tags: [String!]!
  publishTime: [String!]!
  estimatedReadingTime: Int!,
  ThumbnailPictureUrl: String!
  content: String!
  commentCount: Int!
  clapCount: Int!
}

type createPostResponse implements MutationResponse {
  code: Int!
  success: Boolean!
  message: String!
  post: PostThumbnail
}