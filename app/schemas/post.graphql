type Query {
  getPostContentById(postContentId: String!): PostContent!
  getMyPostThumnails: [PostThumbnail!]!
  getAllPostThumbnailsByEmail: [PostThumbnail!]!
}

type Mutation {
  """
  // TODO: Only User Can create Post (Auth Directive) 
  // TODO: deleteMyPost: deletePostResponse 
  // TODO: deleteUserPostByAdmin: deletePostResponse
  """
  createPost(
    topicCluster: String!
    tags: [String!]!
    estimatedReadingTime: Int!
    thumbnailPictureUrl: String!
    shortDescription: String!
    content: String!
  ): CreatePostResponse,
  updateMyPost: GeneralMutationResponse,
  deleteMyPost: GeneralMutationResponse,
  deleteUserPostByAdmin: GeneralMutationResponse,
}

type PostThumbnail {
  postContentId: String!
  author: UserShort!
  topicCluster: String!
  tags: [String!]!
  publishTime: Date!
  estimatedReadingTime: Int!
  thumbnailPictureUrl: String!
  shortDescription: String!
}

type PostContent {
  author: UserShort!
  topicCluster: String!
  tags: [String!]!
  publishTime: Date!
  estimatedReadingTime: Int!
  thumbnailPictureUrl: String!
  content: String!
  commentsCount: Int!
  clapsCount: Int!
  applaused: Boolean!
}
